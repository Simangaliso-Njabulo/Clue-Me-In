@page "/play"
@inject WordsService WordsService

<div class="card-container">
    <FluentStack HorizontalGap="15" HorizontalAlignment="HorizontalAlignment.Center" class="button-stack">
        <FluentButton IconEnd="@(new Icons.Regular.Size20.CheckmarkCircle().WithColor(Color.Success))" OnClick="OnCorrect">Correct</FluentButton>
        <FluentButton IconEnd="@(new Icons.Regular.Size20.DismissCircle().WithColor(Color.Error))" OnClick="OnIncorrect">Incorrect</FluentButton>
        <FluentButton IconEnd="@(new Icons.Regular.Size20.ArrowCircleRight().WithColor(Color.Info))" OnClick="OnSkip">Skip</FluentButton>
    </FluentStack>

    <FluentCard class="card">
        <p class="card-text">@currentWord</p>
    </FluentCard>
</div>

@code {
    private List<string> words;
    private string currentWord = string.Empty;
    private int currentWordIndex = 0;

    protected override void OnInitialized()
    {
        words = WordsService.GetWords(); // Get the words from the service
        if (words.Count > 0)
        {
            currentWord = words[currentWordIndex]; // Display the first word
        }
    }

    // Handle the "Correct" button click
    private void OnCorrect()
    {
        NextWord();
    }

    // Handle the "Incorrect" button click
    private void OnIncorrect()
    {
        NextWord();
    }

    // Handle the "Skip" button click
    private void OnSkip()
    {
        NextWord();
    }

    // Move to the next word
    private void NextWord()
    {
        currentWordIndex++;
        if (currentWordIndex >= words.Count)
        {
            currentWordIndex = 0; // Loop back to the first word if all words are used
        }
        currentWord = words[currentWordIndex];
    }
}
